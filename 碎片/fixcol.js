function FixCol(options) {	this.options = $.extend(this.defaults, options);	this.init();}FixCol.prototype = {	defaults: {		wrapClass: ".scroll",        autoWrap : false,//自动包裹,如果设置为true ,则自动保存最后列的元素到 div 中		fixableClass: ".fixable",        lastColClass:".last_col",		wheelStep: 15,//鼠标滚轮滚动是 滚动条移动速度		hightlightClick: false,        hightlightCallback:function(event){            $("input[type='checkbox']",event.currentTarget).each(function(){                $(this).prop("checked",!$(this).prop("checked"));            });        },		hightlightClass: ".hightlight",        width:80,        rowBgColor:{            thead:{               even:"#e4e4e4",               odd:"#e4e4e4"            },            tbody:{                even: "#ffffff",                odd:"#f0f0f0"            }        },        borderLeft:"1px solid #E0E0E0"	},	init: function() {		cur = this;		var sel = this.options.wrapClass + " " + this.options.fixableClass;		var cw = $(this.options.wrapClass).width();                $(this.options.wrapClass).scrollLeft(0);        this.maxScollLeft = $(this.options.wrapClass + " table").outerWidth() - $(this.options.wrapClass).width();        //console.log(this.maxScollLeft);        function fixable(index){            var bgColor = {};            if($(this).parents("thead").size() > 0 ){                bgColor = cur.options.rowBgColor.thead;            }else{                bgColor = cur.options.rowBgColor.tbody;            }            $(this).parent().addClass(cur.options.lastColClass.substring(1));            var parentHeight = $(this).parent().height();            //var parentWidth = $(this).parent().width();            //console.log(parentHeight);            $(this).css({                "width": cur.options.width + 'px',                //"width": parentWidth + 'px',                "height": parentHeight + 'px',                "line-height": parentHeight + 'px',                "background-color": ( (index + 1) % 2) == 0 ? bgColor.odd : bgColor.even            });            /*			var w = $(this).width();			var pos = $(this).position();            var setleft = pos.left - cw + w;            console.log(pos.left,w,setleft);            */            var setleft = cur.maxScollLeft;             if(setleft > 0){                $(this).css({                    "left": "-" + setleft + 'px',                    "border-left" : cur.options.borderLeft,                    "border-right" : cur.options.borderLeft                });            }else if(setleft == 0){                $(this).css({                    "left":"0px",                    "border-left" : "none",                    "border-right" : "none"                });            }        };		$(this.options.wrapClass + " thead " + this.options.fixableClass).each(fixable);		$(this.options.wrapClass + " tbody " + this.options.fixableClass).each(fixable);		this.origin_pos = $(sel + ":eq(0)").position();        this.hightlight();        this.bindScroll();        this.bindMouseWheel();	},    hightlight:function(){        var cur = this;        var hclass = this.options.hightlightClass.substring(1);		if (this.options.hightlightClick) {			$(this.options.wrapClass + " tbody tr").each(function() {				$(this).click(function(event) {					if ($(this).hasClass(hclass)) {						$(this).removeClass(hclass);					} else {						$(this).addClass(hclass);					}                    cur.options.hightlightCallback(event);				});			});		};    },    bindScroll:function(){        var cur = this;		var sel = this.options.wrapClass + " " + this.options.fixableClass;		var cw = $(this.options.wrapClass).width();		$(this.options.wrapClass).scroll(function() {			var scrollLeft = parseInt($(this).scrollLeft());			var pos = $(sel + ":eq(0)").position();			var left = parseInt($(sel + ":eq(0)").css("left"));                        var setleft = left + (cur.origin_pos.left - pos.left);            if(setleft < 0){                $(sel).css({                    "left": setleft + 'px',                    "border-left" : cur.options.borderLeft,                    "border-right" : cur.options.borderLeft                });            }else if(setleft == 0){                $(sel).css({                    "left": "0px",                    "border-left" : "none",                    "border-right" : "none"                });            }		});    },    bindMouseWheel:function(){        var cur = this;		$(this.options.wrapClass).mousewheel(function(event, delta, deltaX, deltaY) {			//console.log(event,delta,deltaY,deltaY);			var curpos = $(this).scrollLeft();			var setv = 0;			if (delta > 0) {				//up				setv = (curpos - cur.options.wheelStep) < 0 ? 0: (curpos - cur.options.wheelStep);			} else {				//down				setv = (curpos + cur.options.wheelStep) >= cur.maxScollLeft ? cur.maxScollLeft : (curpos + cur.options.wheelStep);			}			$(this).scrollLeft(setv);			event.preventDefault();			event.stopPropagation();		});    },    resize:function(){		var sel = this.options.wrapClass + " " + this.options.fixableClass;		$(sel).each(function(index) {            $(this).css({"left":0});        });            $(this.options.wrapClass).unbind();        this.init();    }}